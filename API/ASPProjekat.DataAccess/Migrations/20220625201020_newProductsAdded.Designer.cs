// <auto-generated />
using System;
using ASPProjekat.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASPProjekat.DataAccess.Migrations
{
    [DbContext(typeof(ProjekatContext))]
    [Migration("20220625201020_newProductsAdded")]
    partial class newProductsAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASPProject.Domain.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAuthorized")
                        .HasColumnType("bit");

                    b.Property<string>("UseCaseName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UseCaseName");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("ASPProject.Domain.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(9728),
                            IsActive = false,
                            ProductId = 3,
                            Quantity = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(9781),
                            IsActive = false,
                            ProductId = 5,
                            Quantity = 6,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Table",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(5536),
                            IsActive = false
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Bed",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6815),
                            IsActive = false
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Chair",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6839),
                            IsActive = false
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Decoration",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6844),
                            IsActive = false
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Dining table",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6850),
                            IsActive = false,
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Coffee table",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6863),
                            IsActive = false,
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Single bed",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6869),
                            IsActive = false,
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Duble bed",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6875),
                            IsActive = false,
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 11,
                            CategoryName = "Sofa",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6881),
                            IsActive = false,
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 12,
                            CategoryName = "Two-seater",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6889),
                            IsActive = false,
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 13,
                            CategoryName = "Three-seater",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6895),
                            IsActive = false,
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 14,
                            CategoryName = "Dining chair",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6901),
                            IsActive = false,
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 15,
                            CategoryName = "Computer chair",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6907),
                            IsActive = false,
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 16,
                            CategoryName = "Office chair",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6913),
                            IsActive = false,
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 19,
                            CategoryName = "Wardrobe",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6919),
                            IsActive = false
                        },
                        new
                        {
                            Id = 20,
                            CategoryName = "Shelf",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6925),
                            IsActive = false
                        },
                        new
                        {
                            Id = 21,
                            CategoryName = "Bookshelf",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6930),
                            IsActive = false,
                            ParentCategoryId = 20
                        },
                        new
                        {
                            Id = 22,
                            CategoryName = "Wall shelf",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(6937),
                            IsActive = false,
                            ParentCategoryId = 20
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.ExceptionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccuredAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("ASPProject.Domain.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alt = "Image for product 1",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(8665),
                            IsActive = false,
                            Path = "cheney-coffee-table.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Alt = "Image for product 2",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(513),
                            IsActive = false,
                            Path = "aula-coffee-table.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Alt = "Image for product 3",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(537),
                            IsActive = false,
                            Path = "anderson-set-coffee-tables.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            Alt = "Image for product 4",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(543),
                            IsActive = false,
                            Path = "haku-dining-table.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            Alt = "Image for product 5",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(548),
                            IsActive = false,
                            Path = "mora-dinning-table.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            Alt = "Image for product 6",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(557),
                            IsActive = false,
                            Path = "marcel-bookcase.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            Alt = "Image for product 7",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(562),
                            IsActive = false,
                            Path = "markus-office-chair.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            Alt = "Image for product 8",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(567),
                            IsActive = false,
                            Path = "jaku-dining-chair.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            Alt = "Image for product 9",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(575),
                            IsActive = false,
                            Path = "kooper-kingsize-bed.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            Alt = "Image for product 10",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(581),
                            IsActive = false,
                            Path = "bourbon-wardrobe.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            Alt = "Image for product 11",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(586),
                            IsActive = false,
                            Path = "keaton-wardrobe.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            Alt = "Image for product 12",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(591),
                            IsActive = false,
                            Path = "haru-two-seater-sofa.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            Alt = "Image for product 13",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(596),
                            IsActive = false,
                            Path = "kooper-two-seater-sofa.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            Alt = "Image for product 14",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(601),
                            IsActive = false,
                            Path = "lottie-three-seater-sofa.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            Alt = "Image for product 15",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(606),
                            IsActive = false,
                            Path = "faces-wall-set.jpg",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 16,
                            Alt = "Image for product 16",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(611),
                            IsActive = false,
                            Path = "florals-wall-set.jpg",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            Alt = "Image for product 17",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(616),
                            IsActive = false,
                            Path = "leyla-wall-shelf.jpg",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            Alt = "Image for product 18",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(821),
                            IsActive = false,
                            Path = "besley-single-bed.jpg",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            Alt = "Image for product 19",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(831),
                            IsActive = false,
                            Path = "harlow-corner-sofa.jpg",
                            ProductId = 19
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Address 1",
                            City = "CIty 1",
                            Country = "Country 1",
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(1783),
                            IsActive = false,
                            OrderNumber = 7554853,
                            Phone = "0666665522",
                            UserId = 6
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 586, DateTimeKind.Local).AddTicks(5975),
                            IsActive = false,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("PriceValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6670),
                            IsActive = false,
                            PriceValue = 90.99m,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(8053),
                            IsActive = false,
                            PriceValue = 85.99m,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(8076),
                            IsActive = false,
                            PriceValue = 156.99m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(8081),
                            IsActive = false,
                            PriceValue = 275.99m,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(8086),
                            IsActive = false,
                            PriceValue = 350.99m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(8095),
                            IsActive = false,
                            PriceValue = 132.99m,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(8100),
                            IsActive = false,
                            PriceValue = 230.99m,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(8106),
                            IsActive = false,
                            PriceValue = 62.99m,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(8111),
                            IsActive = false,
                            PriceValue = 355.99m,
                            ProductId = 9
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductName")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(584),
                            Description = "This coffee table with glass surface will elevate the look of your space. It is perfect for luxury homes.",
                            IsActive = false,
                            ProductName = "Cheney coffee table"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2265),
                            Description = "Golden details on this table makes it look really refinedand we are sure that this is the right choice if you are looking for something simple yet effective.",
                            IsActive = false,
                            ProductName = "Aula coffee table"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2288),
                            Description = "Made of solid wood with fine details and a smooth surface, the Andreson coffee table brings a classic charm to your room.",
                            IsActive = false,
                            ProductName = "Andreson coffee table"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2294),
                            Description = "Haku is dining table for 6 persons. As gold and glass are erfect match, we are sure that this table will be perfect in any type of home.",
                            IsActive = false,
                            ProductName = "Haku dining table"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2302),
                            Description = "Mora is dining table for 4 persons. ",
                            IsActive = false,
                            ProductName = "Mora dining table"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 21,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2313),
                            Description = "White bookshelf gives you so much freedom to decorate it in any way you like! You can store books, magazines or any type of decoration pieces.",
                            IsActive = false,
                            ProductName = "Marcel bookshelf"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 16,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2320),
                            Description = "Adjust the height and angle of this chair to make you comfortable during the working day. The mesh backrest leaks air, so you won't heat the chair even when the workload increases.",
                            IsActive = false,
                            ProductName = "Markus office chair"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 14,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2326),
                            Description = " Description for jaku dinning chair",
                            IsActive = false,
                            ProductName = "Jaku dining chair"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2332),
                            Description = "Fransoa double bed is so comfortable that you will want to stay in it as long as possible every morning",
                            IsActive = false,
                            ProductName = "Kooper double bed"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 19,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2340),
                            Description = "Description for bourbon wardrobe",
                            IsActive = false,
                            ProductName = "Bourbon wardrobe"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 19,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2346),
                            Description = "Description for keaton wardrobe",
                            IsActive = false,
                            ProductName = "Keaton wardrobe"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2455),
                            Description = "Description for Haru two seater sofa",
                            IsActive = false,
                            ProductName = "Haru two seater sofa"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2464),
                            Description = "Description for Kooper two seater sofa",
                            IsActive = false,
                            ProductName = "Kooper two seater sofa"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 13,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2470),
                            Description = "Description for Kooper Lottie seater sofa",
                            IsActive = false,
                            ProductName = "Lottie three seater sofa"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2476),
                            Description = "Description for Faces wall set",
                            IsActive = false,
                            ProductName = "Faces wall set"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2482),
                            Description = "Description for Florals wall set",
                            IsActive = false,
                            ProductName = "Florals wall set"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 22,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2487),
                            Description = "Description for Leyla wall shelf",
                            IsActive = false,
                            ProductName = "Leyla wall shelf"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2496),
                            Description = "Description for Besley single bed",
                            IsActive = false,
                            ProductName = "Besley single bed"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 11,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(2502),
                            Description = "Description for Harlow corner sofa",
                            IsActive = false,
                            ProductName = "Harlow corner sofa"
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.ProductSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SpecificationId")
                        .HasColumnType("int");

                    b.Property<string>("SpecificationValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SpecificationId");

                    b.ToTable("ProductSpecifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(3055),
                            IsActive = false,
                            ProductId = 1,
                            SpecificationId = 1,
                            SpecificationValue = "55cm"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(5980),
                            IsActive = false,
                            ProductId = 1,
                            SpecificationId = 3,
                            SpecificationValue = "90cm"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6012),
                            IsActive = false,
                            ProductId = 1,
                            SpecificationId = 2,
                            SpecificationValue = "45cm"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6018),
                            IsActive = false,
                            ProductId = 2,
                            SpecificationId = 1,
                            SpecificationValue = "40cm"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6022),
                            IsActive = false,
                            ProductId = 2,
                            SpecificationId = 3,
                            SpecificationValue = "50cm"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6032),
                            IsActive = false,
                            ProductId = 2,
                            SpecificationId = 2,
                            SpecificationValue = "45cm"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6037),
                            IsActive = false,
                            ProductId = 3,
                            SpecificationId = 1,
                            SpecificationValue = "60cm"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6043),
                            IsActive = false,
                            ProductId = 3,
                            SpecificationId = 3,
                            SpecificationValue = "95cm"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6049),
                            IsActive = false,
                            ProductId = 3,
                            SpecificationId = 2,
                            SpecificationValue = "50cm"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6056),
                            IsActive = false,
                            ProductId = 4,
                            SpecificationId = 1,
                            SpecificationValue = "80cm"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6061),
                            IsActive = false,
                            ProductId = 4,
                            SpecificationId = 3,
                            SpecificationValue = "180cm"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6066),
                            IsActive = false,
                            ProductId = 4,
                            SpecificationId = 2,
                            SpecificationValue = "75cm"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6070),
                            IsActive = false,
                            ProductId = 5,
                            SpecificationId = 1,
                            SpecificationValue = "900cm"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6075),
                            IsActive = false,
                            ProductId = 5,
                            SpecificationId = 3,
                            SpecificationValue = "180cm"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6080),
                            IsActive = false,
                            ProductId = 5,
                            SpecificationId = 2,
                            SpecificationValue = "75cm"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6085),
                            IsActive = false,
                            ProductId = 6,
                            SpecificationId = 1,
                            SpecificationValue = "80cm"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6090),
                            IsActive = false,
                            ProductId = 6,
                            SpecificationId = 2,
                            SpecificationValue = "150cm"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6096),
                            IsActive = false,
                            ProductId = 6,
                            SpecificationId = 1,
                            SpecificationValue = "30cm"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6101),
                            IsActive = false,
                            ProductId = 9,
                            SpecificationId = 1,
                            SpecificationValue = "160cm"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6105),
                            IsActive = false,
                            ProductId = 9,
                            SpecificationId = 3,
                            SpecificationValue = "200cm"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 585, DateTimeKind.Local).AddTicks(6110),
                            IsActive = false,
                            ProductId = 9,
                            SpecificationId = 2,
                            SpecificationValue = "45cm"
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 575, DateTimeKind.Local).AddTicks(8696),
                            IsActive = false,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 583, DateTimeKind.Local).AddTicks(7286),
                            IsActive = false,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.RoleUseCase", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UseCaseId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UseCaseId");

                    b.ToTable("RoleUseCases");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 3
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 4
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 7
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 9
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 10
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 6
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 8
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 13
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 11
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 15
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 16
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 19
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 28
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 1
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 2
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 3
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 4
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 5
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 6
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 7
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 8
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 9
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 10
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 11
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 12
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 13
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 14
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 15
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 16
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 17
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 18
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 19
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 20
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 21
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 22
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 23
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 24
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 25
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 26
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 27
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 28
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Specification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("SpecificationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Specifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(8157),
                            IsActive = false,
                            SpecificationName = "Width"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(8793),
                            IsActive = false,
                            SpecificationName = "Height"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(8814),
                            IsActive = false,
                            SpecificationName = "Length"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(8820),
                            IsActive = false,
                            SpecificationName = "Depth"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(8825),
                            IsActive = false,
                            SpecificationName = "Color"
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(991),
                            Email = "johnsmith@gmail.com",
                            FirstName = "John",
                            IsActive = false,
                            LastName = "Smith",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(3982),
                            Email = "mikelegend@gmail.com",
                            FirstName = "Mike",
                            IsActive = false,
                            LastName = "Legend",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(4120),
                            Email = "mariajameson@gmail.com",
                            FirstName = "Maria",
                            IsActive = false,
                            LastName = "Jameson",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(4131),
                            Email = "juliawilliams@gmail.com",
                            FirstName = "Julia",
                            IsActive = false,
                            LastName = "Williams",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(4137),
                            Email = "micheleroberts@gmail.com",
                            FirstName = "Michele",
                            IsActive = false,
                            LastName = "Roberts",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 6, 25, 22, 10, 17, 584, DateTimeKind.Local).AddTicks(4148),
                            Email = "anastasija@gmail.com",
                            FirstName = "Anastasija",
                            IsActive = false,
                            LastName = "Jokovic",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Cart", b =>
                {
                    b.HasOne("ASPProject.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPProject.Domain.User", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASPProject.Domain.Category", b =>
                {
                    b.HasOne("ASPProject.Domain.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ASPProject.Domain.Image", b =>
                {
                    b.HasOne("ASPProject.Domain.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ASPProject.Domain.Order", b =>
                {
                    b.HasOne("ASPProject.Domain.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASPProject.Domain.OrderItem", b =>
                {
                    b.HasOne("ASPProject.Domain.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPProject.Domain.Product", "Product")
                        .WithMany("InOrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ASPProject.Domain.Price", b =>
                {
                    b.HasOne("ASPProject.Domain.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ASPProject.Domain.Product", b =>
                {
                    b.HasOne("ASPProject.Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ASPProject.Domain.ProductSpecification", b =>
                {
                    b.HasOne("ASPProject.Domain.Product", "Product")
                        .WithMany("Specifications")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPProject.Domain.Specification", "Specification")
                        .WithMany("ProductSpecifications")
                        .HasForeignKey("SpecificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Specification");
                });

            modelBuilder.Entity("ASPProject.Domain.RoleUseCase", b =>
                {
                    b.HasOne("ASPProject.Domain.Role", "Role")
                        .WithMany("RoleUseCases")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ASPProject.Domain.User", b =>
                {
                    b.HasOne("ASPProject.Domain.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ASPProject.Domain.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ASPProject.Domain.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ASPProject.Domain.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("InOrderItems");

                    b.Navigation("Prices");

                    b.Navigation("Specifications");
                });

            modelBuilder.Entity("ASPProject.Domain.Role", b =>
                {
                    b.Navigation("RoleUseCases");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ASPProject.Domain.Specification", b =>
                {
                    b.Navigation("ProductSpecifications");
                });

            modelBuilder.Entity("ASPProject.Domain.User", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
