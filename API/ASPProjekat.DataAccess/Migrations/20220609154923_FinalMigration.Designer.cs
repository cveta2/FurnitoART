// <auto-generated />
using System;
using ASPProjekat.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASPProjekat.DataAccess.Migrations
{
    [DbContext(typeof(ProjekatContext))]
    [Migration("20220609154923_FinalMigration")]
    partial class FinalMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASPProject.Domain.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAuthorized")
                        .HasColumnType("bit");

                    b.Property<string>("UseCaseName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UseCaseName");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("ASPProject.Domain.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 245, DateTimeKind.Local).AddTicks(9542),
                            IsActive = false,
                            ProductId = 3,
                            Quantity = 3,
                            UserId = 6
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 245, DateTimeKind.Local).AddTicks(9620),
                            IsActive = false,
                            ProductId = 5,
                            Quantity = 6,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Table",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(7019),
                            IsActive = false
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Bed",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(8945),
                            IsActive = false
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Chair",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(8971),
                            IsActive = false
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Decoration",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(8978),
                            IsActive = false
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Dining table",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(8984),
                            IsActive = false,
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Coffee table",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(8999),
                            IsActive = false,
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Desk",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9005),
                            IsActive = false,
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Computer table",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9012),
                            IsActive = false,
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Single bed",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9018),
                            IsActive = false,
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Duble bed",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9026),
                            IsActive = false,
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 11,
                            CategoryName = "Sofa",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9032),
                            IsActive = false,
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 12,
                            CategoryName = "Two-seater",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9037),
                            IsActive = false,
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 13,
                            CategoryName = "Three-seater",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9044),
                            IsActive = false,
                            ParentCategoryId = 2
                        },
                        new
                        {
                            Id = 14,
                            CategoryName = "Dining chair",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9050),
                            IsActive = false,
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 15,
                            CategoryName = "Computer chair",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9055),
                            IsActive = false,
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 16,
                            CategoryName = "Office chair",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9061),
                            IsActive = false,
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 17,
                            CategoryName = "Children's chair",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9067),
                            IsActive = false,
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 18,
                            CategoryName = "Garden chair",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9074),
                            IsActive = false,
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 19,
                            CategoryName = "Wardrobe",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9080),
                            IsActive = false
                        },
                        new
                        {
                            Id = 20,
                            CategoryName = "Shelf",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9086),
                            IsActive = false
                        },
                        new
                        {
                            Id = 21,
                            CategoryName = "Bookshelf",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9091),
                            IsActive = false,
                            ParentCategoryId = 20
                        },
                        new
                        {
                            Id = 22,
                            CategoryName = "Wall shelf",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(9097),
                            IsActive = false,
                            ParentCategoryId = 20
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.ExceptionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccuredAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("ASPProject.Domain.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alt = "Image for product 1",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(9003),
                            IsActive = false,
                            Path = "image.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Alt = "Image for product 2",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 244, DateTimeKind.Local).AddTicks(3671),
                            IsActive = false,
                            Path = "image.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Alt = "Image for product 3",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 244, DateTimeKind.Local).AddTicks(3713),
                            IsActive = false,
                            Path = "image.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            Alt = "Image for product 4",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 244, DateTimeKind.Local).AddTicks(3720),
                            IsActive = false,
                            Path = "image.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            Alt = "Image for product 5",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 244, DateTimeKind.Local).AddTicks(3726),
                            IsActive = false,
                            Path = "image.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            Alt = "Image for product 6",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 244, DateTimeKind.Local).AddTicks(3741),
                            IsActive = false,
                            Path = "image.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            Alt = "Image for product 7",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 244, DateTimeKind.Local).AddTicks(3747),
                            IsActive = false,
                            Path = "image.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            Alt = "Image for product 8",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 244, DateTimeKind.Local).AddTicks(3907),
                            IsActive = false,
                            Path = "image.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            Alt = "Image for product 9",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 244, DateTimeKind.Local).AddTicks(3916),
                            IsActive = false,
                            Path = "image.jpg",
                            ProductId = 9
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Address 1",
                            City = "CIty 1",
                            Country = "Country 1",
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 244, DateTimeKind.Local).AddTicks(6068),
                            IsActive = false,
                            OrderNumber = 1718801,
                            Phone = "0666665522",
                            UserId = 6
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 245, DateTimeKind.Local).AddTicks(3469),
                            IsActive = false,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("PriceValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(3690),
                            IsActive = false,
                            PriceValue = 90.99m,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(7571),
                            IsActive = false,
                            PriceValue = 85.99m,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(7615),
                            IsActive = false,
                            PriceValue = 156.99m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(7626),
                            IsActive = false,
                            PriceValue = 275.99m,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(7637),
                            IsActive = false,
                            PriceValue = 350.99m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(7658),
                            IsActive = false,
                            PriceValue = 132.99m,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(7669),
                            IsActive = false,
                            PriceValue = 230.99m,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(7678),
                            IsActive = false,
                            PriceValue = 62.99m,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(7687),
                            IsActive = false,
                            PriceValue = 355.99m,
                            ProductId = 9
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductName")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(3982),
                            Description = "This coffee table with glass surface will elevate the look of your space. It is perfect for luxury homes.",
                            IsActive = false,
                            ProductName = "Cheney coffee table"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(6717),
                            Description = "Golden details on this table makes it look really refinedand we are sure that this is the right choice if you are looking for something simple yet effective.",
                            IsActive = false,
                            ProductName = "Aula coffee table"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(6745),
                            Description = "Made of solid wood with fine details and a smooth surface, the Andreson coffee table brings a classic charm to your room.",
                            IsActive = false,
                            ProductName = "Andreson coffee table"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(6752),
                            Description = "Haku is dining table for 6 persons. As gold and glass are erfect match, we are sure that this table will be perfect in any type of home.",
                            IsActive = false,
                            ProductName = "Haku dining table"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(6761),
                            Description = "Mora is dining table for 4 persons. ",
                            IsActive = false,
                            ProductName = "Mora dining table"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 21,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(6774),
                            Description = "White bookshelf gives you so much freedom to decorate it in any way you like! You can store books, magazines or any type of decoration pieces.",
                            IsActive = false,
                            ProductName = "Marcel bookshelf"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 16,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(6781),
                            Description = "Adjust the height and angle of this chair to make you comfortable during the working day. The mesh backrest leaks air, so you won't heat the chair even when the workload increases.",
                            IsActive = false,
                            ProductName = "Markus office chair"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 14,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(6787),
                            Description = " Description for jaku dinning chair",
                            IsActive = false,
                            ProductName = "Jaku dining chair"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 14,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(6794),
                            Description = "Fransoa double bed is so comfortable that you will want to stay in it as long as possible every morning",
                            IsActive = false,
                            ProductName = "Fransoa double bed"
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.ProductSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SpecificationId")
                        .HasColumnType("int");

                    b.Property<string>("SpecificationValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SpecificationId");

                    b.ToTable("ProductSpecifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(7663),
                            IsActive = false,
                            ProductId = 1,
                            SpecificationId = 1,
                            SpecificationValue = "55cm"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2060),
                            IsActive = false,
                            ProductId = 1,
                            SpecificationId = 3,
                            SpecificationValue = "90cm"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2104),
                            IsActive = false,
                            ProductId = 1,
                            SpecificationId = 2,
                            SpecificationValue = "45cm"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2116),
                            IsActive = false,
                            ProductId = 2,
                            SpecificationId = 1,
                            SpecificationValue = "40cm"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2124),
                            IsActive = false,
                            ProductId = 2,
                            SpecificationId = 3,
                            SpecificationValue = "50cm"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2142),
                            IsActive = false,
                            ProductId = 2,
                            SpecificationId = 2,
                            SpecificationValue = "45cm"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2154),
                            IsActive = false,
                            ProductId = 3,
                            SpecificationId = 1,
                            SpecificationValue = "60cm"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2164),
                            IsActive = false,
                            ProductId = 3,
                            SpecificationId = 3,
                            SpecificationValue = "95cm"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2173),
                            IsActive = false,
                            ProductId = 3,
                            SpecificationId = 2,
                            SpecificationValue = "50cm"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2186),
                            IsActive = false,
                            ProductId = 4,
                            SpecificationId = 1,
                            SpecificationValue = "80cm"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2198),
                            IsActive = false,
                            ProductId = 4,
                            SpecificationId = 3,
                            SpecificationValue = "180cm"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2206),
                            IsActive = false,
                            ProductId = 4,
                            SpecificationId = 2,
                            SpecificationValue = "75cm"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2217),
                            IsActive = false,
                            ProductId = 5,
                            SpecificationId = 1,
                            SpecificationValue = "900cm"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2227),
                            IsActive = false,
                            ProductId = 5,
                            SpecificationId = 3,
                            SpecificationValue = "180cm"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2237),
                            IsActive = false,
                            ProductId = 5,
                            SpecificationId = 2,
                            SpecificationValue = "75cm"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2247),
                            IsActive = false,
                            ProductId = 6,
                            SpecificationId = 1,
                            SpecificationValue = "80cm"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2255),
                            IsActive = false,
                            ProductId = 6,
                            SpecificationId = 2,
                            SpecificationValue = "150cm"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2269),
                            IsActive = false,
                            ProductId = 6,
                            SpecificationId = 1,
                            SpecificationValue = "30cm"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2278),
                            IsActive = false,
                            ProductId = 9,
                            SpecificationId = 1,
                            SpecificationValue = "160cm"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2289),
                            IsActive = false,
                            ProductId = 9,
                            SpecificationId = 3,
                            SpecificationValue = "200cm"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 243, DateTimeKind.Local).AddTicks(2299),
                            IsActive = false,
                            ProductId = 9,
                            SpecificationId = 2,
                            SpecificationValue = "45cm"
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 234, DateTimeKind.Local).AddTicks(4119),
                            IsActive = false,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 240, DateTimeKind.Local).AddTicks(5540),
                            IsActive = false,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.RoleUseCase", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UseCaseId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UseCaseId");

                    b.ToTable("RoleUseCases");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 9
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 10
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 6
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 8
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 13
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 11
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 16
                        },
                        new
                        {
                            RoleId = 1,
                            UseCaseId = 19
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 1
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 2
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 3
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 4
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 5
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 6
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 7
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 8
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 9
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 10
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 11
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 12
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 13
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 14
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 15
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 16
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 17
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 18
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 19
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 20
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 21
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 22
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 23
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 24
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 25
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 26
                        },
                        new
                        {
                            RoleId = 2,
                            UseCaseId = 27
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Specification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("SpecificationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Specifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(794),
                            IsActive = false,
                            SpecificationName = "Width"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(1756),
                            IsActive = false,
                            SpecificationName = "Height"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(1780),
                            IsActive = false,
                            SpecificationName = "Length"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(1786),
                            IsActive = false,
                            SpecificationName = "Depth"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 242, DateTimeKind.Local).AddTicks(1792),
                            IsActive = false,
                            SpecificationName = "Color"
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(718),
                            Email = "johnsmith@gmail.com",
                            FirstName = "John",
                            IsActive = false,
                            LastName = "Smith",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(5343),
                            Email = "mikelegend@gmail.com",
                            FirstName = "Mike",
                            IsActive = false,
                            LastName = "Legend",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(5374),
                            Email = "mariajameson@gmail.com",
                            FirstName = "Maria",
                            IsActive = false,
                            LastName = "Jameson",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(5382),
                            Email = "juliawilliams@gmail.com",
                            FirstName = "Julia",
                            IsActive = false,
                            LastName = "Williams",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(5389),
                            Email = "micheleroberts@gmail.com",
                            FirstName = "Michele",
                            IsActive = false,
                            LastName = "Roberts",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 49, 21, 241, DateTimeKind.Local).AddTicks(5402),
                            Email = "anastasija@gmail.com",
                            FirstName = "Anastasija",
                            IsActive = false,
                            LastName = "Jokovic",
                            Password = "$2a$11$hPsl4hFksFlOiMv5bSBT8eJ23/PShHt3ixygI9V.LYqw6nQwDn4Zu",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("ASPProject.Domain.Cart", b =>
                {
                    b.HasOne("ASPProject.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPProject.Domain.User", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASPProject.Domain.Category", b =>
                {
                    b.HasOne("ASPProject.Domain.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ASPProject.Domain.Image", b =>
                {
                    b.HasOne("ASPProject.Domain.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ASPProject.Domain.Order", b =>
                {
                    b.HasOne("ASPProject.Domain.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASPProject.Domain.OrderItem", b =>
                {
                    b.HasOne("ASPProject.Domain.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPProject.Domain.Product", "Product")
                        .WithMany("InOrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ASPProject.Domain.Price", b =>
                {
                    b.HasOne("ASPProject.Domain.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ASPProject.Domain.Product", b =>
                {
                    b.HasOne("ASPProject.Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ASPProject.Domain.ProductSpecification", b =>
                {
                    b.HasOne("ASPProject.Domain.Product", "Product")
                        .WithMany("Specifications")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPProject.Domain.Specification", "Specification")
                        .WithMany("ProductSpecifications")
                        .HasForeignKey("SpecificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Specification");
                });

            modelBuilder.Entity("ASPProject.Domain.RoleUseCase", b =>
                {
                    b.HasOne("ASPProject.Domain.Role", "Role")
                        .WithMany("RoleUseCases")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ASPProject.Domain.User", b =>
                {
                    b.HasOne("ASPProject.Domain.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ASPProject.Domain.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ASPProject.Domain.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ASPProject.Domain.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("InOrderItems");

                    b.Navigation("Prices");

                    b.Navigation("Specifications");
                });

            modelBuilder.Entity("ASPProject.Domain.Role", b =>
                {
                    b.Navigation("RoleUseCases");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ASPProject.Domain.Specification", b =>
                {
                    b.Navigation("ProductSpecifications");
                });

            modelBuilder.Entity("ASPProject.Domain.User", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
